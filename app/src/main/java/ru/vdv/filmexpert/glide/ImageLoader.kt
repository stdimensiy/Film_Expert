package ru.vdv.myapp.myreadersdiary.glide

/**
 * Универсальный интерфейс, на случай операивной замены библиотеки работающей с изображениями
 */

interface ImageLoader<T> {
    /**
    ## Загрузить изображения постера фильма
     * @param url строка содержащая URL картинки (ПОСТЕР ДЛЯ ФИЛЬМА)
     * @param container объект (view) куда будет загружено изображение
     * @return [Unit] нет возвращаемого параметра (действие будет выполнено в любом случае)
     * @throws [Unit] не возвращает ошибку, в случае некорректности данных метод применит и
     * подставит во вьюху дефолтную картинку обложки (*выбор котрой осуществляется на основании
     * отдельного алгоритма*)
     **/
    fun loadMovieCover(url: String, container: T)

    /**
    ## Загрузить изображения аватара актера
     * @param url строка содержащая URL картинки (АВАТАРА АКТЕРА)
     * @param container объект (view) куда будет загружено изображение
     * @return [Unit] нет возвращаемого параметра (действие будет выполнено в любом случае)
     * @throws [Unit] не возвращает ошибку, в случае некорректности данных метод применит
     * дефолтные значения в данном конкретном случае во вью будет подставлена картинка
     * дефолтного аватара (*выбор которого осуществляется на основании внутреннего алгоритма*)
     **/
    fun loadActorAvatar(url: String, container: T)

    /**
    ## Загрузить изображения фона для фильма
     * @param url строка содержащая URL картинки (ФОН ДЛЯ ФИЛЬМА)
     * @param container объект (view) куда будет загружено изображение
     * @return [Unit] нет возвращаемого параметра (действие будет выполнено в любом случае)
     * @throws [Unit] не возвращает ошибку, в случае некорректности данных метод применит
     * дефолтные значения в данном конкретном случае во вью будет подставлена картинка
     * дефолтного фона (*выбор которого осуществляется на основании внутреннего алгоритма*)
     **/
    fun loadMovieBackground(url: String, container: T)
}